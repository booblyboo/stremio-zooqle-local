{"version":3,"sources":["../src/index.js"],"names":["STATIC_DIR","USER_AGENT","DEFAULT_ID","ID_PROPERTY","ID","process","env","STREMIO_ZOOQLE_ID","ENDPOINT","STREMIO_ZOOQLE_ENDPOINT","PORT","STREMIO_ZOOQLE_PORT","PROXY","STREMIO_ZOOQLE_PROXY","HTTPS_PROXY","CACHE","STREMIO_ZOOQLE_CACHE","REDIS_URL","EMAIL","STREMIO_ZOOQLE_EMAIL","USERNAME","STREMIO_ZOOQLE_USERNAME","PASSWORD","STREMIO_ZOOQLE_PASSWORD","IS_PROD","NODE_ENV","console","error","chalk","red","exit","MANIFEST","name","id","version","pkg","description","types","idProperty","dontAnnounce","email","contactEmail","endpoint","logo","icon","background","filter","$exists","$in","findStreams","client","req","imdbId","query","imdb_id","type","season","episode","torrents","getMovieTorrents","getShowTorrents","ZooqleClient","userName","password","userAgent","proxy","cache","methods","cb","then","res","err","addon","Stremio","Server","server","http","createServer","middleware","end","on","values","green","log","listen"],"mappings":"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","sourcesContent":["import http from 'http'\nimport Stremio from 'stremio-addons'\nimport serveStatic from 'serve-static'\nimport chalk from 'chalk'\nimport pkg from '../package.json'\nimport ZooqleClient from './ZooqleClient'\nimport convertTorrentsToStreams from './convertTorrentsToStreams'\n\n\nconst STATIC_DIR = 'static'\nconst USER_AGENT = 'stremio-zooqle'\nconst DEFAULT_ID = 'stremio_zooqle'\nconst ID_PROPERTY = 'imdb_id'\n\nconst ID = process.env.STREMIO_ZOOQLE_ID || DEFAULT_ID\nconst ENDPOINT = process.env.STREMIO_ZOOQLE_ENDPOINT || 'http://localhost'\nconst PORT = process.env.STREMIO_ZOOQLE_PORT || process.env.PORT || '80'\nconst PROXY = process.env.STREMIO_ZOOQLE_PROXY || process.env.HTTPS_PROXY\nconst CACHE = process.env.STREMIO_ZOOQLE_CACHE || process.env.REDIS_URL || '1'\nconst EMAIL = process.env.STREMIO_ZOOQLE_EMAIL || process.env.EMAIL\nconst USERNAME = process.env.STREMIO_ZOOQLE_USERNAME\nconst PASSWORD = process.env.STREMIO_ZOOQLE_PASSWORD\nconst IS_PROD = process.env.NODE_ENV === 'production'\n\n\nif (!USERNAME || !PASSWORD) {\n  // eslint-disable-next-line no-console\n  console.error(\n    chalk.red(\n      '\\nZooqle username and password must be specified\\n'\n    )\n  )\n  process.exit(1)\n}\n\nif (IS_PROD && ID === DEFAULT_ID) {\n  // eslint-disable-next-line no-console\n  console.error(\n    chalk.red(\n      '\\nWhen running in production, a non-default addon identifier must be specified\\n'\n    )\n  )\n  process.exit(1)\n}\n\n\nconst MANIFEST = {\n  name: 'Zooqle',\n  id: ID,\n  version: pkg.version,\n  description: 'Watch movies and series indexed by Zooqle from various torrent trackers',\n  types: ['movie', 'series'],\n  idProperty: ID_PROPERTY,\n  dontAnnounce: !IS_PROD,\n  // The docs mention `contactEmail`, but the template uses `email`\n  email: EMAIL,\n  contactEmail: EMAIL,\n  endpoint: `${ENDPOINT}/stremioget/stremio/v1`,\n  logo: `${ENDPOINT}/logo-white.png`,\n  icon: `${ENDPOINT}/logo-white.png`,\n  background: `${ENDPOINT}/bg.jpg`,\n  // OBSOLETE: used in pre-4.0 stremio instead of idProperty/types\n  filter: {\n    [`query.${ID_PROPERTY}`]: { $exists: true },\n    'query.type': { $in: ['movie', 'series'] },\n  },\n}\n\n\nasync function findStreams(client, req) {\n  let imdbId = req.query && req.query.imdb_id\n\n  if (!imdbId) {\n    return\n  }\n\n  let { type, season, episode } = req.query\n  let torrents\n\n  if (type === 'movie') {\n    torrents = await client.getMovieTorrents(imdbId)\n  } else {\n    torrents = await client.getShowTorrents(imdbId, season, episode)\n  }\n\n  return convertTorrentsToStreams(torrents)\n}\n\n\nlet client = new ZooqleClient({\n  userName: USERNAME,\n  password: PASSWORD,\n  userAgent: USER_AGENT,\n  proxy: PROXY,\n  cache: CACHE,\n})\nlet methods = {\n  'stream.find': (req, cb) => {\n    findStreams(client, req).then(\n      (res) => cb(null, res),\n      (err) => {\n        /* eslint-disable no-console */\n        console.error(\n          'An error has occurred while processing the following request:'\n        )\n        console.error(req)\n        console.error(err)\n        /* eslint-enable no-console */\n        cb(err)\n      }\n    )\n  },\n}\nlet addon = new Stremio.Server(methods, MANIFEST)\nlet server = http.createServer((req, res) => {\n  serveStatic(STATIC_DIR)(req, res, () => {\n    addon.middleware(req, res, () => res.end())\n  })\n})\n\nserver\n  .on('listening', () => {\n    let values = {\n      endpoint: chalk.green(MANIFEST.endpoint),\n      id: ID === DEFAULT_ID ? chalk.red(ID) : chalk.green(ID),\n      email: EMAIL ? chalk.green(EMAIL) : chalk.red('undefined'),\n      env: IS_PROD ? chalk.green('production') : chalk.green('development'),\n      proxy: PROXY ? chalk.green(PROXY) : chalk.red('off'),\n      cache: (CACHE === '0') ?\n        chalk.red('off') :\n        chalk.green(CACHE === '1' ? 'on' : CACHE),\n      userName: chalk.green(USERNAME),\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(`\n    ${MANIFEST.name} Addon is listening on port ${PORT}\n\n    Endpoint:    ${values.endpoint}\n    Addon Id:    ${values.id}\n    Email:       ${values.email}\n    Environment: ${values.env}\n    Cache:       ${values.cache}\n    Proxy:       ${values.proxy}\n    Username:    ${values.userName}\n    `)\n  })\n  .listen(PORT)\n\n\nexport default server\n"],"file":"index.js"}